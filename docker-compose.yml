version: "3"

networks:
  backend:
    driver: "bridge"

services:
  nginx:
    build:
      context: ./nginx
      args:
        MONGO_HOST: mongo
    ports:
      - "80:80"
    depends_on:
      - bff
    networks:
      - backend

  users:
    build:
      context: ./users
    command: npm run start:watch
    volumes:
      - ./users:/usr/src/app
    env_file:
      - ./users/.env
    environment:
      - "JAEGER_ENDPOINT=http://jaeger:14268/api/traces"
      - "JAEGER_AGENT_HOST=jaeger"
      - "JAEGER_AGENT_PORT=5775"
    depends_on:
      - mongo
      - address
      - jaeger
    networks:
      - backend

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"
      - "16686:16686"
    networks:
      - backend

  address:
    build:
      context: ./address
    command: npm run start:watch
    environment:
      - "JAEGER_ENDPOINT=http://jaeger:14268/api/traces"
      - "JAEGER_AGENT_HOST=jaeger"
      - "JAEGER_AGENT_PORT=5775"
    volumes:
      - ./address:/usr/src/app
    env_file:
      - ./address/.env
    depends_on:
      - mongo
    networks:
      - backend

  bff:
    build:
      context: ./bff
    command: npm run start:watch
    env_file:
      - ./bff/.env
    volumes:
      - ./bff:/usr/src/app
    ports:
      - "8001:3000"
    depends_on:
      - mongo
      - users 
    networks:
      - backend

  mongo:
    image: "mongo:4"
    restart: always
    command: --auth
    ports:
      - "27017:27017"
    env_file:
      - .env
    volumes:
      - ./docker-entrypoint/mongo:/docker-entrypoint-initdb.d
      - ./data/mongo:/data/db
    networks:
      - backend
